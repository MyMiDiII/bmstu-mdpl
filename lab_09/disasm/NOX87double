
out/double_operations.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <getDoubleSize>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	b8 40 00 00 00       	mov    $0x40,%eax
   d:	5d                   	pop    %rbp
   e:	c3                   	retq   

000000000000000f <getDoubleCSum>:
   f:	f3 0f 1e fa          	endbr64 
  13:	55                   	push   %rbp
  14:	48 89 e5             	mov    %rsp,%rbp
  17:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  1c:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
  21:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  26:	f2 0f 58 45 e0       	addsd  -0x20(%rbp),%xmm0
  2b:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  30:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  35:	5d                   	pop    %rbp
  36:	c3                   	retq   

0000000000000037 <getDoubleCProd>:
  37:	f3 0f 1e fa          	endbr64 
  3b:	55                   	push   %rbp
  3c:	48 89 e5             	mov    %rsp,%rbp
  3f:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  44:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
  49:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  4e:	f2 0f 59 45 e0       	mulsd  -0x20(%rbp),%xmm0
  53:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  58:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  5d:	5d                   	pop    %rbp
  5e:	c3                   	retq   

000000000000005f <getDoubleAsmSum>:
  5f:	f3 0f 1e fa          	endbr64 
  63:	55                   	push   %rbp
  64:	48 89 e5             	mov    %rsp,%rbp
  67:	48 83 ec 20          	sub    $0x20,%rsp
  6b:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  70:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
  75:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  7c:	00 00 
  7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  82:	31 c0                	xor    %eax,%eax
  84:	dd 45 e8             	fldl   -0x18(%rbp)
  87:	dd 45 e0             	fldl   -0x20(%rbp)
  8a:	de c1                	faddp  %st,%st(1)
  8c:	dd 5d f0             	fstpl  -0x10(%rbp)
  8f:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  98:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  9f:	00 00 
  a1:	74 05                	je     a8 <getDoubleAsmSum+0x49>
  a3:	e8 00 00 00 00       	callq  a8 <getDoubleAsmSum+0x49>
  a8:	c9                   	leaveq 
  a9:	c3                   	retq   

00000000000000aa <getDoubleAsmProd>:
  aa:	f3 0f 1e fa          	endbr64 
  ae:	55                   	push   %rbp
  af:	48 89 e5             	mov    %rsp,%rbp
  b2:	48 83 ec 20          	sub    $0x20,%rsp
  b6:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  bb:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
  c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  c7:	00 00 
  c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  cd:	31 c0                	xor    %eax,%eax
  cf:	dd 45 e8             	fldl   -0x18(%rbp)
  d2:	dd 45 e0             	fldl   -0x20(%rbp)
  d5:	de c9                	fmulp  %st,%st(1)
  d7:	dd 5d f0             	fstpl  -0x10(%rbp)
  da:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
  df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  ea:	00 00 
  ec:	74 05                	je     f3 <getDoubleAsmProd+0x49>
  ee:	e8 00 00 00 00       	callq  f3 <getDoubleAsmProd+0x49>
  f3:	c9                   	leaveq 
  f4:	c3                   	retq   

00000000000000f5 <getDoubleFuncTime>:
  f5:	f3 0f 1e fa          	endbr64 
  f9:	55                   	push   %rbp
  fa:	48 89 e5             	mov    %rsp,%rbp
  fd:	48 83 ec 40          	sub    $0x40,%rsp
 101:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
 106:	f2 0f 11 4d d0       	movsd  %xmm1,-0x30(%rbp)
 10b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 10f:	e8 00 00 00 00       	callq  114 <getDoubleFuncTime+0x1f>
 114:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 118:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 11f:	00 
 120:	eb 1d                	jmp    13f <getDoubleFuncTime+0x4a>
 122:	f2 0f 10 45 d0       	movsd  -0x30(%rbp),%xmm0
 127:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 12b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 12f:	66 0f 28 c8          	movapd %xmm0,%xmm1
 133:	66 48 0f 6e c0       	movq   %rax,%xmm0
 138:	ff d2                	callq  *%rdx
 13a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 13f:	48 81 7d e8 3f 42 0f 	cmpq   $0xf423f,-0x18(%rbp)
 146:	00 
 147:	76 d9                	jbe    122 <getDoubleFuncTime+0x2d>
 149:	e8 00 00 00 00       	callq  14e <getDoubleFuncTime+0x59>
 14e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 156:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
 15a:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
 15f:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # 167 <getDoubleFuncTime+0x72>
 166:	00 
 167:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
 16b:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # 173 <getDoubleFuncTime+0x7e>
 172:	00 
 173:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
 177:	c9                   	leaveq 
 178:	c3                   	retq   

0000000000000179 <printDoubleCharacteristics>:
 179:	f3 0f 1e fa          	endbr64 
 17d:	55                   	push   %rbp
 17e:	48 89 e5             	mov    %rsp,%rbp
 181:	48 83 ec 20          	sub    $0x20,%rsp
 185:	f2 0f 10 05 00 00 00 	movsd  0x0(%rip),%xmm0        # 18d <printDoubleCharacteristics+0x14>
 18c:	00 
 18d:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
 192:	f2 0f 10 05 00 00 00 	movsd  0x0(%rip),%xmm0        # 19a <printDoubleCharacteristics+0x21>
 199:	00 
 19a:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
 19f:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1a6 <printDoubleCharacteristics+0x2d>
 1a6:	e8 00 00 00 00       	callq  1ab <printDoubleCharacteristics+0x32>
 1ab:	e8 00 00 00 00       	callq  1b0 <printDoubleCharacteristics+0x37>
 1b0:	89 c6                	mov    %eax,%esi
 1b2:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1b9 <printDoubleCharacteristics+0x40>
 1b9:	b8 00 00 00 00       	mov    $0x0,%eax
 1be:	e8 00 00 00 00       	callq  1c3 <printDoubleCharacteristics+0x4a>
 1c3:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 1c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1cc:	66 0f 28 c8          	movapd %xmm0,%xmm1
 1d0:	66 48 0f 6e c0       	movq   %rax,%xmm0
 1d5:	e8 00 00 00 00       	callq  1da <printDoubleCharacteristics+0x61>
 1da:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
 1df:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 1e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1e8:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1ef <printDoubleCharacteristics+0x76>
 1ef:	66 0f 28 c8          	movapd %xmm0,%xmm1
 1f3:	66 48 0f 6e c0       	movq   %rax,%xmm0
 1f8:	e8 00 00 00 00       	callq  1fd <printDoubleCharacteristics+0x84>
 1fd:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
 202:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 209 <printDoubleCharacteristics+0x90>
 209:	b8 02 00 00 00       	mov    $0x2,%eax
 20e:	e8 00 00 00 00       	callq  213 <printDoubleCharacteristics+0x9a>
 213:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 218:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 21c:	66 0f 28 c8          	movapd %xmm0,%xmm1
 220:	66 48 0f 6e c0       	movq   %rax,%xmm0
 225:	e8 00 00 00 00       	callq  22a <printDoubleCharacteristics+0xb1>
 22a:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
 22f:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 234:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 238:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 23f <printDoubleCharacteristics+0xc6>
 23f:	66 0f 28 c8          	movapd %xmm0,%xmm1
 243:	66 48 0f 6e c0       	movq   %rax,%xmm0
 248:	e8 00 00 00 00       	callq  24d <printDoubleCharacteristics+0xd4>
 24d:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
 252:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 259 <printDoubleCharacteristics+0xe0>
 259:	b8 02 00 00 00       	mov    $0x2,%eax
 25e:	e8 00 00 00 00       	callq  263 <printDoubleCharacteristics+0xea>
 263:	f2 0f 10 05 00 00 00 	movsd  0x0(%rip),%xmm0        # 26b <printDoubleCharacteristics+0xf2>
 26a:	00 
 26b:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
 270:	f2 0f 10 05 00 00 00 	movsd  0x0(%rip),%xmm0        # 278 <printDoubleCharacteristics+0xff>
 277:	00 
 278:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
 27d:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 282:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 286:	66 0f 28 c8          	movapd %xmm0,%xmm1
 28a:	66 48 0f 6e c0       	movq   %rax,%xmm0
 28f:	e8 00 00 00 00       	callq  294 <printDoubleCharacteristics+0x11b>
 294:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
 299:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 29e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2a2:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2a9 <printDoubleCharacteristics+0x130>
 2a9:	66 0f 28 c8          	movapd %xmm0,%xmm1
 2ad:	66 48 0f 6e c0       	movq   %rax,%xmm0
 2b2:	e8 00 00 00 00       	callq  2b7 <printDoubleCharacteristics+0x13e>
 2b7:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
 2bc:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2c3 <printDoubleCharacteristics+0x14a>
 2c3:	b8 02 00 00 00       	mov    $0x2,%eax
 2c8:	e8 00 00 00 00       	callq  2cd <printDoubleCharacteristics+0x154>
 2cd:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 2d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2d6:	66 0f 28 c8          	movapd %xmm0,%xmm1
 2da:	66 48 0f 6e c0       	movq   %rax,%xmm0
 2df:	e8 00 00 00 00       	callq  2e4 <printDoubleCharacteristics+0x16b>
 2e4:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
 2e9:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
 2ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2f2:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2f9 <printDoubleCharacteristics+0x180>
 2f9:	66 0f 28 c8          	movapd %xmm0,%xmm1
 2fd:	66 48 0f 6e c0       	movq   %rax,%xmm0
 302:	e8 00 00 00 00       	callq  307 <printDoubleCharacteristics+0x18e>
 307:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
 30c:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 313 <printDoubleCharacteristics+0x19a>
 313:	b8 02 00 00 00       	mov    $0x2,%eax
 318:	e8 00 00 00 00       	callq  31d <printDoubleCharacteristics+0x1a4>
 31d:	90                   	nop
 31e:	c9                   	leaveq 
 31f:	c3                   	retq   
